demo("GGally")
vignette("GGally")
help("GGally")
# Example from the documentation
data(flea)
install.package("GGally")
install.packages("GGally")
################################################################################
# LIBRARY EXAMPLE
################################################################################
install.packages("GGally")
library("GGally")
demo("GGally")
vignette("GGally")
help("GGally")
# Example from the documentation
data(flea)
ggpairs(flea, columns = 2:4)
ggpairs(flea, columns = 1:4)
install.packages("aRtsy")
library("aRtsy")
library(tinytex)
library("tinytex")
install.packages("tinytex")
install.packages("aRtsy")
library("aRtsy")
library("tinytex")
help("aRtsy")
citation("aRtsy")
citation("aRtsy")
citations(aRtsy)
citation("aRtsy")
####################################################
#Homework 1
#Problem 2
####################################################
num = 0:10
results = rep (x=NA, length(num))
for (i in 1:lenght(num)){
result = 2^(i+1) + 2^(i-1)
results[i] = result
}
for (i in 1:length(num)){
result = 2^(i+1) + 2^(i-1)
results[i] = result
}
print(results)
?which()
help(which())
####################################################
#Homework 1
#Problem 2
####################################################
num = 0:10
results = rep (x=NA, length(num))
for (i in 1:length(num)){
result = 2^(i+1) + 2^(i-1)
results[i] = result
answer = which(result == 40)
}
print(results)
print(results[answer])
print(answer)
View(answer)
####################################################
#Homework 1
#Problem 2
####################################################
x <- seq(from = 0, to = 10, by = 1)
eq <- 2^{x+1}+2^{x-1}
which(eq==40)
(which(result) == 40)
(which(result == 40))
(which(results == 40))
print(results)
results = 2^num
print(results)
?Sexpr{}
?Sexpr()
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
print(num)
####################################################
#Homework 1
#Problem 2
####################################################
num = 0:10
print(num)
print(num)
results = 2^x+1 + 2^x-1
print(results)
results = 2^(x+1) + 2^(x-1)
print(results)
?citation()
install.packages("stringr")
library("stringr")
help("stringr")
vignette("stringe")
vignette("stringr")
demo("stringr")
library("stringr")
list.dir('MUSIC/')
?list.dirs()
list.dirs(MUSIC\)
list.dirs(MUSIC)
list.dirs(MUSIC\)
list.dirs(R.home("MUSIC/"))
list.dirs("MUSIC/")
list.dirs("MUSIC/")
list.dirs("Music")
list.dirs("Music")
list.dirs(main.dir)
print(dir.list)
main.dir = /MUSIC/
print(dir.list)
list.dirs(main.dir, recursive=FALSE)
main.dir = "Music"
list.dirs(main.dir, recursive=FALSE)
main.dir = "Music/"
list.dirs(main.dir, recursive=FALSE)
main.dir = "MUSIC/"
list.dirs(main.dir, recursive=FALSE)
list.dirs(main.dir, recursive=FALSE)
list.dirs(main.dir, recursive=TRUE)
#rangetest <- function(feature)
feature <- "overall_loudness"
essentia.data|>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE))
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
#rangetest <- function(feature)
feature <- "overall_loudness"
essentia.data|>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE))
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
#rangetest <- function(feature)
feature <- "overall_loudness"
essentia.data|>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
get("overall_loudness")
#rangetest <- function(feature)
feature <- "overall_loudness"
(get(feature))
#rangetest <- function(feature)
feature <- "overall_loudness"
essentia.data|>
(get(feature)) |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
#rangetest <- function(feature)
feature <- "overall_loudness"
essentia.data|>
get(feature) |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data|>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
essentia.data
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
feature <- "overall_loudness"
essentia.data #|>
# group_by(artist) |>
# group_by(artist) |>
# summarize(min = min(get(feature)),
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
#                               TRUE, FALSE)) |>
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
#                               TRUE, FALSE)) |>
# mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
#                               TRUE, FALSE)) |>
# mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
#                          TRUE, FALSE)) |>
# group_by(artist) |>
# summarize(min = min(get(feature)),
#           LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
#           UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
#           max = max(get(feature))) |>
# mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
#                               TRUE, FALSE)) |>
# mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
#                          TRUE, FALSE)) |>
# mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
essentia.data |>
group_by(artist) |>
summarize(min = min(overall_loudness),
LF = quantile(overall_loudness, 0.25) - 1.5 * IQR(overall_loudness),
UF = quantile(overall_loudness, 0.75) + 1.5 * IQR(overall_loudness),
max = max(overall_loudness)) |>
mutate(out.of.range = if_else(overall_loudness < min | overall_loudness > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(overall_loudness < LF | overall_loudness > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(overall_loudness),
LF = quantile(overall_loudness, 0.25) - 1.5 * IQR(overall_loudness),
UF = quantile(overall_loudness, 0.75) + 1.5 * IQR(overall_loudness),
max = max(overall_loudness)) |>
mutate(out.of.range = if_else(overall_loudness < min | overall_loudness > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(overall_loudness < LF | overall_loudness > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
# Lab 5
# Henry Sun
library("tidyverse")
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
setwd("~/GitHub/lab-5-summarizing-and-graphing-data-in-r-HSun8")
# Lab 5
# Henry Sun
library("tidyverse")
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
feature <- "overall_loudness"
essentia.data #|>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(, 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
feature <- "overall_loudness"
essentia.data |>
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
# Step 1
essentia.data = read_csv("data/essentia.data.csv")
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
get(overall_loudness)
get("overall_loudness")
feature <- "overall_loudness"
essentia.data |>
group_by(artist) |>
summarize(min = min(get(feature)),
LF = quantile(get(feature), 0.25) - 1.5 * IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5 * IQR(get(feature)),
max = max(get(feature))) |>
mutate(out.of.range = if_else(get(feature) < min | get(feature) > max,
TRUE, FALSE)) |>
mutate(unusual = if_else(get(feature) < LF | get(feature) > UF,
TRUE, FALSE)) |>
mutate(description = if_else(out.of.range == TRUE | out.of.range == TRUE,
"Out of Range", "Within Range"))
