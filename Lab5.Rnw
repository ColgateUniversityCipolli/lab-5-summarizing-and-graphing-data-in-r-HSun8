\documentclass{article}
\usepackage{amsmath} %This allows me to use the align functionality.
                     %If you find yourself trying to replicate
                     %something you found online, ensure you're
                     %loading the necessary packages!
\usepackage{amsfonts}%Math font
\usepackage{graphicx}%For including graphics
\usepackage{hyperref}%For Hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\hypersetup{colorlinks = true,citecolor=black} %set citations to have black (not green) color
\usepackage{natbib}        %For the bibliography
\setlength{\bibsep}{0pt plus 0.3ex}
\bibliographystyle{apalike}%For the bibliography
\usepackage[margin=0.50in]{geometry}
\usepackage{float}
\usepackage{multicol}

%fix for figures
\usepackage{caption}
\newenvironment{Figure}
  {\par\medskip\noindent\minipage{\linewidth}}
  {\endminipage\par\medskip}
\begin{document}

\vspace{-1in}
\title{Lab 3 -- MATH 240 -- Computational Statistics}

\author{
  Henry Sun \\
  Colgate University  \\
  Department of Mathematics  \\
  {\tt hlsun@colgate.edu}
}

\date{}

\maketitle

\begin{multicols}{2}
\begin{abstract}
This lab aims to answer the question of determining which band: Manchester Orchestra, The Front Bottoms, or All Get Out contributed more to the song ``Allentown." We used Essentia and LIWC to conduct audio and lyrical analysis of song. Manchester Orchestra likely contributed more to the audio, while The Front Bottoms likely contributed more to the lyrics.
\end{abstract}

\noindent \textbf{Keywords:} Installing, loading, and learning to use libraries; working with characters objects; coding \texttt{for()} loops; accessing elements of vectors and lists.

\section{Introduction}
\indent  
In 2018, two bands -- The Front Bottoms and Manchester Orchestra -- released a song they collaborated on called Allentown. In a statement to Noisey \citep{vice} -- the music arm of Vice -- Andy Hull of Manchester Orchestra recalled that the creation of this track started when Nate Hussey of All Get Out sent him the first four lines of the track. Andy Hull worked out the melody and music and shared it with Brian Sella of The Front Bottoms, who then helped develop the chorus. 

\indent Throughout this lab, we used Essentia \citep{essentia} to conduct musical analysis on each song, giving us a rough idea of what each band's songs ``sound" like. Using this data, we were able to conclude which band contributed the most to ``Allentown."

\indent In the first week of this lab, we built a batch file (\texttt{batfile.txt}) to process all the song in the directory given to us. We then extracted data from the .JSON Essentia Output, Au Revoir (Adios) in the Talon of the Hawk album by the Front Bottoms, and conducted some musical analysis on the song. 

\indent In the second week of this lab, we continued to compile data for each song from their .JSON file, but we also compiled data from the \texttt{EssentiaModelOutput.csv}, providing us with audio info, and \texttt{LIWCOutput.csv}, providing us with lyrical info. We merge all of the data into a data frame, and used it to create a \texttt{.csv} file for testing and training. 
\columnbreak

\indent Finally, we used \texttt{tidyverse} \citep{tidyverse} to write a function that identified key features that would help us conclude which band contributed the most to ``Allentown" with the aid of plots and tables generated by \texttt{tidyverse} and 
\texttt{xtable} \citep{xtable}.
\section{Methods}
\subsection{Week 1}
After obtaining all of the \texttt{.wav} files for each song, we first began by building a batch file for data processing. Using the \texttt{stringr} package \citep{stringr}, we were able to create the command line prompt for each track, before using \verb|writeLines()| to write all the command lines into the batch file.
Our second task was to process the .JSON Output from a sample song, which we accomplished by using the \texttt{jsonlite} package \citep{jsonlite}. Using this, along with the \texttt{stringr} package, we were able to extract key information from the song, like artist, album, and average loudness. We were then able to use this same skeleton to extract information from every song's .JSON output. 

\subsection{Week 2}
Our first task for the second week of this lab was nearly identical to the procedure followed in the second task from the first week, except that we collected data from the Essentia Model Data \citep{essentiamodel}. This provided us with more auditory information on each song. \\ 
\indent Likewise, we used the LIWC-22 program \citep{liwc} to conduct lyrical analysis on each song. We were able to gather data that describes the thoughts, feelings, and personality traits based on the language used. We extracted additional data by averaging values from certain data points. For example, we can get data on valence and arousal by average the data from the DEAM, emo Music, and MuSe datasets. \\ 
\indent We consolidated the data collected in the previous steps using the \verb|merge()| function. We used this data set to create a testing \texttt{.csv} file, containing only the track ``Allentown" and a training \texttt{.csv} file, containing all tracks except ``Allentown."
\subsection{Week 3}
During our final week, we picked out and summarized key features from each band to determine which one contributed the most to Allentown. We first began by calculating the upper and lower fences, and the minimum and maximum for each numerical feature. We compared these values to the same features found in the Allentown track, keeping note of all features within range for one band. Using this data, we were able to create graphs and tables using \verb|ggplot()| and \verb|xtable()| to help us better visualize each feature of interest. 
\section{Results}
In order to identify which band contributed the most to the song, we first began by determining which features in Allentown to analyze. A feature was classified as "Within Range" if the numeric value was between the upper and lower fence for the same feature in each band. This was narrowed down even further to $21$ features having only one band in range. A table of all key features (Table \ref{feat.table}) can be found in the appendix. Overall, we can see that there were no key features with only All Get Out being the only band. However, there were $3$ features within range for The Front Bottoms and $18$ for Manchester Orchestra. It's also crucial to note here that $3$ out of the $4$ lyrical features are within range for The Front Bottoms, while all of the audio features were within range for Manchester Orchestra. \\
\indent Below is a box plot of the only key feature that is within range of The Front Bottoms (Figure \ref{plot1}. \texttt{positivewords} is one of the three lyrical features (out of four total), along with \texttt{OtherP} and \texttt{conj} within range for The Front Bottoms. This should still be taken with a grain of salt, as \texttt{positivewords} only overlaps with the upper fence, and there are still outliers from both the other bands with more positive words than The Front Bottoms.
<<plot1, warning = FALSE, echo=FALSE, size = 'scriptsize'>>=
 #Plot a histogram of random normally distributed data
  # Lab 5 
# Henry Sun 
suppressPackageStartupMessages(library(tidyverse))
# Step 1
# load in data
essentia.data = read_csv("data/essentia.data.csv", show_col_types = FALSE)
allentown.data = read_csv("data/essentia.data.allentown.csv", show_col_types = FALSE)
# function
rangetest <- function(feature){
#feature <- "overall_loudness"
  essentia.summary <- essentia.data |>
  # group data by artist
    group_by(artist) |>
  # summarize artist with min, LF, UF, max
    summarize(minimum = min(get(feature), na.rm = T),
              LF = quantile(get(feature), 0.25, na.rm = T) 
                   - 1.5 * IQR(get(feature), na.rm =T),
              UF = quantile(get(feature), 0.75, na.rm = T) 
                   + 1.5 * IQR(get(feature), na.rm = T),
              maximum = max(get(feature), na.rm = T)) |>
      # out.of.range
      mutate(out.of.range = if_else(allentown.data[[feature]] < minimum | 
                                    allentown.data[[feature]] > maximum, 
                                    TRUE, FALSE)) |>
      # unsual
      mutate(unusual = if_else(allentown.data[[feature]] < LF | 
                               allentown.data[[feature]] > UF,
                               TRUE, FALSE)) |>
      mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
                                     unusual == TRUE ~ "Outlying",
                                     .default = "Within Range")) #|>
    # select(all_of(c("artist", "out.of.range", "unusual", "description")))
    # return tibble 
    essentia.summary
}

# Step 2
# numeric data
numeric.cols <- essentia.data |> 
  select(where(is.numeric)) 
# apply function to all numeric data
numeric.names = names(numeric.cols)
key.features = c()
features.tab = tibble()
for (i in 1:length(numeric.names)){
  diff.check <- pull(rangetest(numeric.names[i])) 
  # save all features that contain a single outlier
  if ("Outlying" %in% diff.check | "Out of Range" %in% diff.check){
    key.features = c(key.features, numeric.names[i])
    features.tab <- rbind(features.tab, diff.check)
  }
}


# categorical data to be processed
cat.cols <- essentia.data |>
  select(!where(is.numeric))

# Step 3
library("xtable")
# consolidate all features into a tibble
all.features <- tibble(key.features, features.tab) 
final.features <- all.features |>
  rename("Key Features" = "key.features",
         "All Get Out" = "X.Within.Range.",
         "Manchester Orchestra" = "X.Within.Range..1",
         "The Front Bottoms" = "X.Outlying.") |>
  # still too many variables, 
  # now only sort through vars with one band in range
  filter((rowSums(all.features == "Within Range")) == 1)
  
features.tab = xtable(final.features)

#print(features.tab) 

# Step 4
# plots

# categorical data (probably not included)
df.cat <- essentia.data %>%
  dplyr::select("chords_key", "artist") %>%
  drop_na() %>%
  group_by(!!sym("chords_key"), !!sym("artist")) %>%
  summarise(Observations = sum(!is.na(!!sym("chords_key"))), .groups = "drop") %>%
  tidyr::complete(!!sym("chords_key"), !!sym("artist")) %>%
  replace_na(list(Observations = 0)) %>%
  group_by(!!sym("artist")) %>%
  mutate(Proportion = Observations / sum(Observations)) %>%
  arrange(desc(!!sym("chords_key"))) %>%
  mutate(Percent = Proportion * 100) %>%
  mutate(denoted.group = paste("artist", " = ", !!sym("artist"), sep = ""))
####################################
# Create Plot
####################################
cat.plot <- ggplot(df.cat, aes(x = !!sym("chords_key"), y = Proportion)) +
  geom_bar(stat = "identity", width = 0.5, fill = "lightblue") +
  get("theme_bw")() +
  xlab("chords_key") +
  ylab(ifelse("Proportion" == "", "Proportion", "Proportion")) +
  ggtitle("", "") +
  geom_hline(yintercept = 0) +
  facet_wrap(~denoted.group)
####################################
# Print Plot
####################################
# cat.plot
# numeric data 
poswords.plot <- ggplot(data=essentia.data,                       
       aes(y=artist, x=positivewords)) +      
  #geom_violin(fill="grey80")+
  geom_boxplot(fill="grey80") +
  theme_bw()+                                  
  xlab("Positive Words")+                       
  ylab("Artist")+   
  geom_vline(xintercept=allentown.data$positivewords)
# poswords.plot

# plot showing within range for each band
dat.within = final.features |>
  summarize(fb.within = sum(pull(final.features) == "Within Range"),
            mo.within = sum(pull(final.features, var = -2) == "Within Range"),
            ago.within = sum(pull(final.features, var = -3) == "Within Range"))

# one more continuous plot  
avgloudness.plot <- ggplot(data=essentia.data,                       
                        aes(y=artist, x=average_loudness)) +      
  geom_violin(fill="grey80")+
  geom_boxplot(width = 0.05) +
  theme_bw()+                                  
  xlab("Average Loudness")+                       
  ylab("Artist")+   
  geom_vline(xintercept=allentown.data$average_loudness)
# avgloudness.plot
 @
 \begin{figure}[H]
 %This code is evaluated, but not printed
 %warning=FALSE and message=FALSE ensure no text is returned as a by product of
 %printing; this would cause an error in that plot+text is returned instead of
 %just the plot
 <<echo=FALSE, warning=FALSE, message=FALSE, fig.dim=c(5,3.5)>>=
 poswords.plot
 @
 \caption{please work}
 \label{plot1} %we can now reference plot1
 \end{figure}
Above is a box plot of the only key feature that is a discrete variable. \texttt{positivewords} is one of the three lyrical features, along with \texttt{OtherP} and \texttt{conj} within range for The Front Bottoms.
\section{Discussion}
\indent Overall, on average, this means that a song by Manchester Orchestra is much more relaxing than a song by The Front Bottoms. The \texttt{relaxed} value for ``Allentown" is 0.16, which suggests that from evaluting each artist purely by the \texttt{relaxed} value, Manchester Orchestra contributed more to the song than the Front Bottoms. \\
\indent The \texttt{relaxed} value was the most visibly distinguishing value between Manchester Orchestra and The Front Bottoms when using the violin plot. I found the inclusion of each song as a point on the chart to be helpful in visualizing the general trend of each band. The Front Bottoms are generally more relaxed than Manchester Orchestra, except for a few outliers, forming a small bulge in the violin plot left of most of the rest of the songs.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bibliography
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{2em}

\begin{tiny}
\bibliography{bib}
\end{tiny}
\end{multicols}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\onecolumn
\section{Appendix}
\begin{table}[ht]
\centering
\begin{tabular}{rllll}
  \hline
  Key Features & All Get Out & Manchester Orchestra & The Front Bottoms \\ 
  \hline
  spectral\_skewness & Outlying & Within Range & Out of Range \\ 
  spectral\_rolloff & Out of Range & Within Range & Out of Range \\ 
  spectral\_kurtosis & Outlying & Within Range & Out of Range \\ 
  spectral\_entropy & Outlying & Within Range & Out of Range \\ 
  spectral\_energyband\_middle\_high & Out of Range & Within Range & Out of Range \\ 
  spectral\_complexity & Out of Range & Within Range & Out of Range \\ 
  spectral\_centroid & Out of Range & Within Range & Out of Range \\ 
  melbands\_spread & Out of Range & Within Range & Out of Range \\ 
  melbands\_flatness\_db & Out of Range & Within Range & Out of Range \\ 
  erbbands\_skewness & Out of Range & Within Range & Out of Range \\ 
  erbbands\_flatness\_db & Outlying & Within Range & Out of Range \\ 
  dissonance & Outlying & Within Range & Out of Range \\ 
  barkbands\_skewness & Out of Range & Within Range & Out of Range \\ 
  barkbands\_kurtosis & Out of Range & Within Range & Out of Range \\ 
  barkbands\_flatness\_db & Outlying & Within Range & Out of Range \\ 
  average\_loudness & Outlying & Within Range & Outlying \\ 
  chords\_strength & Outlying & Within Range & Out of Range \\ 
  conj & Out of Range & Outlying & Within Range \\ 
  Perception & Out of Range & Within Range & Out of Range \\ 
  OtherP & Outlying & Outlying & Within Range \\ 
  positivewords & Outlying & Outlying & Within Range \\ 
   \hline
\end{tabular}
\caption{workin?}
\label{feat.table}
\end{table}
\end{document}